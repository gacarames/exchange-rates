{"version":3,"sources":["components/ExchangeRate/ExchangeRate.tsx","components/PriceExchange/PriceExchange.tsx","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["EXCHANGE_RATES","gql","ExchangeRate","exchangeName","useQuery","variables","loading","error","data","Card","CardContent","exchange","compra","venta","fecha","PriceExchange","id","useParams","className","App","path","element","src","logo","alt","href","target","rel","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"qRAIMA,EAAiBC,YAAH,oKAmCLC,EAtB6B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC7C,EAAiCC,YAASJ,EAAgB,CACxDK,UAAW,CAAEF,kBADPG,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAIxB,OAAIF,EAAgB,2CAChBC,EAAc,yCAGhB,cAACE,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,6BAAKP,IACL,qCAAQK,EAAKG,SAASC,OAAtB,SACA,qCAAQJ,EAAKG,SAASE,SACtB,8BACE,+BAAOL,EAAKG,SAASG,gBC3BzBd,EAAiBC,YAAH,oKA+BLc,EAtBW,WACtB,IAAQC,EAAOC,cAAPD,GAER,EAAiCZ,YAASJ,EAAgB,CACtDK,UAAW,CAAEF,aAAca,KADvBV,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAIxB,OAAIF,EAAgB,2CAChBC,EAAc,yCAGd,sBAAKW,UAAU,sBAAf,UACI,6BAAKF,IACL,qCAAQR,EAAKG,SAASC,OAAtB,SACA,qCAAQJ,EAAKG,SAASE,SACtB,8BACI,+BAAOL,EAAKG,SAASG,cC9BtB,MAA0B,iC,MCgD1BK,MA1Cf,WAEE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QACb,qBAAKH,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACE,qBAAKI,IAAKC,EAAML,UAAU,WAAWM,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEN,UAAU,WACVO,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,gCAWN,cAAC,IAAD,CACEC,OAAK,EACLR,KAAK,aACLC,QACE,qCACE,cAAC,EAAD,CAAclB,aAAc,eAC5B,cAAC,EAAD,CAAcA,aAAc,cAC5B,cAAC,EAAD,CAAcA,aAAc,kBAC5B,cAAC,EAAD,CAAcA,aAAc,sBAIlC,cAAC,IAAD,CAAOyB,OAAK,EACVR,KAAK,iBAAiBC,QAAS,cAAC,EAAD,YC9B1BQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2BCORQ,EAAS,IAAIC,IAAa,CAC9BC,IAAK,yBAELC,MAAO,IAAIC,MAGbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBR,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.2189bf77.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Card, CardContent } from '@mui/material';\n\nconst EXCHANGE_RATES = gql`\n  query GetExchangeRates($exchangeName: String!) {\n    exchange(exchangeName: $exchangeName) {\n      compra\n      venta\n    }\n  }\n`;\n\ninterface ExchangeRateProps {\n  exchangeName: String;\n}\n\nconst ExchangeRate: FC<ExchangeRateProps> = ({ exchangeName }) => {\n  const { loading, error, data } = useQuery(EXCHANGE_RATES, {\n    variables: { exchangeName },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Card>\n      <CardContent>\n        <h4>{exchangeName}</h4>\n        <span>${data.exchange.compra} / </span>\n        <span>${data.exchange.venta}</span>\n        <div>\n          <span>{data.exchange.fecha}</span>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ExchangeRate;\n","import React, { FC } from 'react';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useQuery, gql } from \"@apollo/client\";\n// import { Card, CardContent } from '@mui/material';\n\nconst EXCHANGE_RATES = gql`\n  query GetExchangeRates($exchangeName: String!) {\n    exchange(exchangeName: $exchangeName) {\n      compra\n      venta\n    }\n  }\n`;\n\nconst PriceExchange: FC = () => {\n    const { id } = useParams();\n\n    const { loading, error, data } = useQuery(EXCHANGE_RATES, {\n        variables: { exchangeName: id },\n    });\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return (\n        <div className=\"widget-currency-col\">\n            <h4>{id}</h4>\n            <span>${data.exchange.compra} / </span>\n            <span>${data.exchange.venta}</span>\n            <div>\n                <span>{data.exchange.fecha}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default PriceExchange","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport ExchangeRate from './components/ExchangeRate';\nimport PriceExchange from './components/PriceExchange';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Router>\n      <Routes>\n        <Route path='/' element={\n          (<div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Edit <code>src/App.js</code> and save to reload.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            </header>\n          </div>)\n        } />\n        <Route\n          exact\n          path=\"/exchanges\"\n          element={\n            <>\n              <ExchangeRate exchangeName={\"dolarbolsa\"} />\n              <ExchangeRate exchangeName={\"dolarblue\"} />\n              <ExchangeRate exchangeName={\"dolarpromedio\"} />\n              <ExchangeRate exchangeName={\"contadoliqui\"} />\n            </>\n          }\n        />\n        <Route exact\n          path=\"/exchanges/:id\" element={<PriceExchange />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  // uri: 'https://exchenge-rates-api.vercel.app/',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}